name: Build and Deploy Code #just a name

on: [push, pull_request] #activates on this condition (push or pull on any branch)
  # push:
  #   branches: ["main"]

jobs:  #set of steps that execute on the same runner
  build: #name
    environment:  #calling the environment secrets set on github
      name: testing
    env: #env variables
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}} 
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

# Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: mypass #${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: fastapi_test #${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest #defines which runner it will use
    # steps:
    #   - name: Step 2 - GitHub Action if statement (true)
        # if:  env.DATABASE_PASSWORD == 'mypass'
        # run: echo "I know what the password token is!"
        # if:  env.DATABASE_HOSTNAME == 'localhost'
        # run: echo "I know what the hostname token is!"
        # if:  env.DATABASE_PORT == '5432'
        # run: echo "I know what the port token is!"
        # if:  env.DATABASE_NAME == 'fastapi'
        # run: echo "I know what the name token is!"
        # if:  env.DATABASE_USERNAME == 'postgres'
        # run: echo "I know what the username token is!"
        # if:  env.SECRET_KEY == '09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7'
        # run: echo "I know what the secretkey token is!"
        # if:  env.ALGORITHM == 'HS256'
        # run: echo "I know what the algorithm token is!"
        # if:  env.ACCESS_TOKEN_EXPIRE_MINUTES == '30'
        # run: echo "I know what the expiry token is!"
        
    - name: pulling git repo #name of the action
      uses: actions/checkout@v2 #actual command for the action
    - name: Install python 
      uses: actions/setup-python@v2 #setting up python
      with:
        python-version: '3.9'
    - name: update pip
      run: python -m pip install --upgrade pip
    - name: install all dependencies
      run: pip install -r requirements.txt
    - name: testing with pytest
      run: |  
        pip install pytest
        pytest         

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
